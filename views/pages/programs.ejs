  <%- include('../partials/head') %>
  <main>
    <div class="container" id="dashbaordDisplay">

      <% if (role === 'admin') { %>

      <h1>Programs and Events:</h1>
      <div class="align-items: flex-end; width: auto;">
        <input type="button" value="Create new Event" class="edit-programs">
      </div>

      <% } else { %>
      <h1>Upcoming programs:</h1>
      <% } %>

      <% if(Array.isArray(dashboard) && dashboard.length === 0) { %>

      <div class="row">
        <div style="text-align: center;">
          <p>There are no new upcoming programs or events. Check again soon!</p>
        </div>
      </div>

      <% } else {%>

      <% dashboard.forEach(e => { %>
      <article>
        <div role="group" style="margin: 0;">
          <h5> <%= e.name %></h5>
          <p style="text-align: end;"><strong> <%= e.utc_start_date %></strong></p>
        </div>
        <!-- line -->
        <hr>
        <p> <%= e.description %></p>
        <p> <strong>Location:</strong> <%= e.location %></p>

        <p> <strong>Capacity:</strong> <%= e.capacity %>%</p>
        <p><strong>Status:</strong> <%= e.status%></p>

        <% if (role!=='nothing') { %>
        <!-- line -->
        <hr>
        <div class="grid">
          <input type="button" value="Register">
          <% if (role==='admin') { %>
          <input type="button" value="edit" class="edit-programs" data-id="<%= e.id %>">
          <% } %>
        </div>
        <% } %>
      </article>
      <% }) %>



      <% } %>
    </div>

    <% if(role === 'admin'){ %>
    <dialog id="createUpdateEventModal">
      <article style="max-width: 1000px; ">
        <header>
          <button aria-label="Close" rel="prev" onclick="closeAllModal()"></button>
          <h2 id="createUpdateTitle">Create Event:</h2>
        </header>
        <form id="createUpdateEventForm" method="POST">
          <input type="hidden" id="id" name="id">

          <!-- name -->
          <label for="name">Name:</label>
          <input type="text" id="name" name="name">
          <!-- description -->
          <label for="description">Description:</label>
          <textarea id="description" name="description"> </textarea>

          <div class="grid">
            <!-- capacity -->
            <div>
              <label for="capacity">Capacity:</label>
              <input type="number" id="capacity" name="capacity">
            </div>
            <!-- num_registered -->
            <div>
              <label for="num_registered">Number of Registered:</label>
              <input type="number" id="num_registered" name="num_registered">
            </div>
          </div>

          <div class="grid">
            <div>
              <!-- start datetime -->
              <label for="start_datetime">Start Date & Time:</label>
              <input type="datetime-local" id="start_datetime" name="start_datetime">
            </div>
            <div>
              <!-- end datetime -->
              <label for="end_datetime">End Date & Time:</label>
              <input type="datetime-local" id="end_datetime" name="end_datetime">
            </div>
          </div>

          <!-- location -->
          <label for="location">Location:</label>
          <input type="text" id="location" name="location">
          <!-- instructor -->
          <label for="instructor">Teacher:</label>
          <select name="instructor" id="instructor"></select>
          <!-- status -->
          <label for="status">Status: </label>
          <select name="status" id="status">
            <option value="draft" name="draft">draft</option>
            <option value="scheduled" name="scheduled">scheduled</option>
            <option value="active" name="active">active</option>
            <option value="completed" name="completed">completed</option>
            <option value="postponed" name="postponed">postponed</option>
            <option value="archived" name="archived">archived</option>
          </select>
          <!-- organization -->
          <label for="org_name">Select organization:</label>
          <select name="org_name" id="org_name"></select>
          <!-- creation datetime -->
          <label for="creation_datetime">Creation DateTime:</label>
          <input type="datetime-local" name="creation_datetime" id="creation_datetime">

          <input type="submit" value="Subscribe" />
        </form>
      </article>
    </dialog>

    <% } %>
  </main>

  <script>
    const userDashboard = document.getElementById('dashbaordDisplay');
    const createUpdateModal = document.getElementById('createUpdateEventModal');

    const title = document.getElementById("createUpdateTitle");

    const name = document.getElementById('name');
    const description = document.getElementById('description');
    const capacity = document.getElementById('capacity');
    const num_registered = document.getElementById('num_registered');
    const start_datetime = document.getElementById('start_datetime');
    const end_datetime = document.getElementById('end_datetime');
    const place = document.getElementById('location');
    const instructor = document.getElementById('instructor');
    const status = document.getElementById('status');
    const org_name = document.getElementById('org_name');
    const creation_datetime = document.getElementById('creation_datetime');

    // save the values of the dashboard and form style display
    const ogDashboardDisplayValue = userDashboard.style.display;
    const ogCreateUpdateFormDValue = createUpdateModal.style.display;

    // When users press the "create new event" button or "edit" 
    Array.from(document.getElementsByClassName("edit-programs")).forEach(b => {
      b.addEventListener("click", (e) => {
        // Hid program dashboard and display the create form.

        if (b.dataset.id) {
          fetch(`/programs/${b.dataset.id}`).then(j => j.json()).then(d => {

            document.getElementById("createUpdateEventForm").action = `/programs/update/${d.id}`;

            // idInput.value = d.id;
            title.textContent = "Edit Event";


            name.value = d.program.name;
            description.value = d.program.description;
            capacity.value = d.program.capacity;
            num_registered.value = d.program.num_registered;
            start_datetime.value = zuluToDatetimeLocal(d.program.utc_start_date);
            end_datetime.value = zuluToDatetimeLocal(d.program.utc_end_date);
            place.value = d.program.location;
            // instructor.value = d.program.instructor;
            addOptionsToSelect(instructor, d.instructors, d.program.first_name)
            status.value = d.program.status;
            addOptionsToSelect(org_name, d.organizations, d.program.org_name)
            creation_datetime.value = zuluToDatetimeLocal(d.program.utc_creation_time);

            // deleteTriggerButton.style.display = 'inline-block';


            console.log(d);
            createUpdateModal.showModal();

          });
        } else {
          console.log("Creating a new Event");
          document.getElementById('createUpdateEventModal').action = `/programs/create/`;
        }
      });
    });

    function closeAllModal() {
      createUpdateModal.close();
    }

    function addOptionsToSelect(select, listOfOptions, selected) {
      console.log("testing reach")
      for (let x = 0; x < listOfOptions.length; x++) {
        let opt = new Option();
        // opt.value = listOfOptions[x].name;
        opt.innerHTML = listOfOptions[x].name;
        opt.selected = listOfOptions[x].name == selected;
        select.appendChild(opt);
      }
    }
  </script>